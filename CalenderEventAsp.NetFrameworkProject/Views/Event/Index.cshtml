
@{
    ViewBag.Title = "Index";
    Layout = "/Views/UILayout/Index.cshtml";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Takvim</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Anasayfa</a></li>
                        <li class="breadcrumb-item active">Takvim</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3">
                    <div class="sticky-top mb-3">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title"> Sürüklenebilir Etkinlikler</h4>
                            </div>
                            <div class="card-body">
                                <!-- the events -->
                                <div id="external-events">
                                    <div class="external-event bg-success">Spor: Fitness Salonu (Cardio)</div>
                                    <div class="external-event bg-warning">Alışveriş ve Market Ziyareti</div>
                                    <div class="external-event bg-info"> Doğum Günü</div>
                                    <div class="external-event bg-primary">Yazılım Ekibi Haftalık Değerlendirme</div>
                                    <div class="external-event bg-danger">Murat Yücedağ .Net Egitimi</div>
                                    <div class="checkbox">
                                        <label for="drop-remove">
                                            <input type="checkbox" id="drop-remove">
                                            sürükledikten sonra kaldır
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <!-- /.card-body -->
                        </div>
                        <!-- /.card -->
                        <div class="card">
                            <div class="card-header">
                                <h3 class="card-title">Etkinlik Oluştur</h3>
                            </div>
                            <div class="card-body">
                                @Html.Action("CategoryColorList", "Category")


                                <!-- /btn-group -->
                                <div class="input-group">
                                    <input id="new-event" type="text" class="form-control" placeholder="Etkinlik Başlığı">

                                    <div class="input-group-append">
                                        <button id="add-new-event" type="button" class="btn btn-primary">Ekle</button>
                                    </div>
                                    <!-- /btn-group -->
                                </div>
                                <!-- /input-group -->
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.col -->
                <div class="col-md-9">
                    <div class="card card-primary">
                        <div class="card-body p-0">
                            <!-- THE CALENDAR -->
                            <div id="calendar"></div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div><!-- /.container-fluid -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<!-- Page specific script -->
@section Scripts{
    <script>
        $(function () {

            /* initialize the external events
             -----------------------------------------------------------------*/
            function ini_events(ele) {
                ele.each(function () {

                    // create an Event Object (https://fullcalendar.io/docs/event-object)
                    // it doesn't need to have a start or end
                    var eventObject = {
                        title: $.trim($(this).text()) // use the element's text as the event title
                    }

                    // store the Event Object in the DOM element so we can get to it later
                    $(this).data('eventObject', eventObject)

                    // make the event draggable using jQuery UI
                    $(this).draggable({
                        zIndex: 1070,
                        revert: true, // will cause the event to go back to its
                        revertDuration: 0  //  original position after the drag
                    })

                })
            }

            ini_events($('#external-events div.external-event'))

            /* initialize the calendar
             -----------------------------------------------------------------*/
            //Date for the calendar events (dummy data)
            var date = new Date()
            var d = date.getDate(),
                m = date.getMonth(),
                y = date.getFullYear()

            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendar.Draggable;

            var containerEl = document.getElementById('external-events');
            var checkbox = document.getElementById('drop-remove');
            var calendarEl = document.getElementById('calendar');

            // initialize the external events
            // -----------------------------------------------------------------

            new Draggable(containerEl, {
                itemSelector: '.external-event',
                eventData: function (eventEl) {
                    return {
                        title: eventEl.innerText,
                        backgroundColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        borderColor: window.getComputedStyle(eventEl, null).getPropertyValue('background-color'),
                        textColor: window.getComputedStyle(eventEl, null).getPropertyValue('color'),
                    };
                }
            });

            var calendar = new Calendar(calendarEl, {
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                themeSystem: 'bootstrap',

                eventReceive: function (info) {
                    const event = info.event;

                    const title = event.title;
                    const start = event.start;
                    const allDay = event.allDay;
                    const endDate = event.end || (event.allDay
                        ? new Date(start.getTime() + 24 * 60 * 60 * 1000) // +1 gün
                        : new Date(start.getTime() + 60 * 60 * 1000));    // +1 saat
                    const backgroundColor = event.backgroundColor;
                    const borderColor = event.borderColor;

                    console.log("Etkinlik adı:", title);
                    console.log("Başlangıç:", start.toISOString());
                    console.log("Son:", endDate.toISOString());
                    console.log("AllDay:", allDay);
                    console.log("Renk:", backgroundColor);

                    $.ajax({
                        type: "POST",
                        url: "/Event/CreateEvent",
                        data: {
                            Title: event.title,
                            Start: event.start.toISOString(),
                            End: endDate.toISOString(),
                            AllDay: event.allDay,
                            BackgroundColor: event.backgroundColor,
                            BorderColor: event.borderColor
                        },
                        success: function (res) {
                            if (res.success && res.id) {
                                event.setProp('id', res.id); // ⬅️ ID'yi takvim event'ine ata
                                console.log("Etkinlik başarıyla kaydedildi.id:", res.id);
                            } else {
                                console.error("Etkinlik kaydedildi ama ID alınamadı.");
                            }
                        },
                        error: function () {
                            console.error("Etkinlik kaydı sırasında hata oluştu.");
                        }

                    });
                },


                ////Random default events
                //events: [
                //  {
                //    title          : 'All Day Event',
                //    start          : new Date(y, m, 1),
                //    backgroundColor: '#f56954', //red
                //    borderColor    : '#f56954', //red
                //    allDay         : true
                //  },
                //  {
                //    title          : 'Long Event',
                //    start          : new Date(y, m, d - 5),
                //    end            : new Date(y, m, d - 2),
                //    backgroundColor: '#f39c12', //yellow
                //    borderColor    : '#f39c12' //yellow
                //  },
                //  {
                //    title          : 'Meeting',
                //    start          : new Date(y, m, d, 10, 30),
                //    allDay         : false,
                //    backgroundColor: '#0073b7', //Blue
                //    borderColor    : '#0073b7' //Blue
                //  },
                //  {
                //    title          : 'Lunch',
                //    start          : new Date(y, m, d, 12, 0),
                //    end            : new Date(y, m, d, 14, 0),
                //    allDay         : false,
                //    backgroundColor: '#00c0ef', //Info (aqua)
                //    borderColor    : '#00c0ef' //Info (aqua)
                //  },
                //  {
                //    title          : 'Birthday Party',
                //    start          : new Date(y, m, d + 1, 19, 0),
                //    end            : new Date(y, m, d + 1, 22, 30),
                //    allDay         : false,
                //    backgroundColor: '#00a65a', //Success (green)
                //    borderColor    : '#00a65a' //Success (green)
                //  },
                //  {
                //    title          : 'Click for Google',
                //    start          : new Date(y, m, 28),
                //    end            : new Date(y, m, 29),
                //    url            : 'https://www.google.com/',
                //    backgroundColor: '#3c8dbc', //Primary (light-blue)
                //    borderColor    : '#3c8dbc' //Primary (light-blue)
                //  }
                //],
                editable: true,
                droppable: true, // this allows things to be dropped onto the calendar !!!
                //  // ⬇️ Veritabanındaki kayıtları otomatik olarak çek

                eventResize: function (info) {
                    const event = info.event;

                    $.ajax({
                        type: "POST",
                        url: "/Event/UpdateEvent",
                        data: {
                            id: event.id,
                            start: event.start.toISOString(),
                            end: event.end ? event.end.toISOString() : null
                        },
                        success: function (res) {
                            if (!res.success) {
                                alert("Sunucu hatası: " + res.message); // burada hatayı görürsün
                            } else {
                                console.log("Etkinlik güncellendi.");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("AJAX error:", xhr.responseText);
                            alert("AJAX Hatası: " + xhr.responseText);
                        }
                    });
                },

                eventClick: function (info) {
                    if (confirm("Bu etkinliği silmek istediğinizden emin misiniz?")) {
                        $.ajax({
                            type: "POST",
                            url: "/Event/DeleteEvent",
                            data: { id: info.event.id },
                            success: function (res) {
                                if (res.success) {
                                    info.event.remove(); // takvimden kaldır
                                    alert("Etkinlik başarıyla silindi.");
                                } else {
                                    alert("Silme işlemi başarısız: " + res.message);
                                }
                            },
                            error: function () {
                                alert("Sunucu hatası! Etkinlik silinemedi.");
                            }
                        });
                    }
                },

                events: '/Event/GetEvents',

                drop: function (info) {
                    // is the "remove after drop" checkbox checked?
                    if (checkbox.checked) {
                        // if so, remove the element from the "Draggable Events" list
                        info.draggedEl.parentNode.removeChild(info.draggedEl);
                    }
                }
            });

            calendar.render();
            // $('#calendar').fullCalendar()

            /* ADDING EVENTS */
            var currColor = '#3c8dbc' //Red by default
            // Color chooser button
            $('#color-chooser > li > a').click(function (e) {
                e.preventDefault()
                // Save color
                currColor = $(this).css('color')
                // Add color effect to button
                $('#add-new-event').css({
                    'background-color': currColor,
                    'border-color': currColor
                })
            })
            $('#add-new-event').click(function (e) {
                e.preventDefault()
                // Get value and make sure it is not null
                var val = $('#new-event').val()
                if (val.length == 0) {
                    return
                }

                // Create events
                var event = $('<div />')
                event.css({
                    'background-color': currColor,
                    'border-color': currColor,
                    'color': '#fff'
                }).addClass('external-event')
                event.text(val)
                $('#external-events').prepend(event)

                // Add draggable funtionality
                ini_events(event)

                // Remove event from text input
                $('#new-event').val('')
            })
        })

    </script>
}



</body>
</html>


